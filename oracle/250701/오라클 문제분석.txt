##테이블의 이름과 필드명을 기억하라
##테이블간의 명제확인하고 종속관계여부 파악
사원으로 기준으로 명제를 만들거나
부서를 기준으로 명제를 만든다.
사원은 부서에 소속되어진다.(수동)
부서는 사원이 소속되어있다.(능동)
부서는 별도로 존재할 수 있는지 여부 확인(누구한테 관습을 받지 않는다)
/단독 존재가능/외래키로 사용이 가능/현 테이블에서는 다른 외래키가 존재x)

반드시 존재해야하는 대상은 테이블에 외래키로 포함시킨다.(연결)

#단어에 대한 sql문 연결
출력 : select
~인, ~고 : 조건 where
~들, 모든 : 집합 테이블명
내림차순, 오름차순, 정렬 : order by 
~로 시작하는,~같은  : 조건, like
~번대 : 범위 and, between A and B
~수(인원수):통계함수 사용

#문자열 함수
LENGTH() / LEN()	문자열 길이 반환	LENGTH('hello') → 5
LOWER() / LCASE()	소문자로 변환	LOWER('HELLO') → 'hello'
UPPER() / UCASE()	대문자로 변환	UPPER('hello') → 'HELLO'
SUBSTRING() / SUBSTR()특정 위치의 하위 문자열 반환 SUBSTRING('abcdef', 2, 3) → 'bcd'
CONCAT()	문자열 합치기	CONCAT('Hello', ' ', 'World') → 'Hello World'
TRIM()	앞뒤 공백 제거	TRIM(' hello ') → 'hello'
LTRIM()	왼쪽 공백 제거	LTRIM(' hello') → 'hello'
RTRIM()	오른쪽 공백 제거	RTRIM('hello ') → 'hello'
REPLACE()	특정 문자열 치환	REPLACE('abcabc', 'a', 'x') → 'xbcxbc'
INSTR() / POSITION()	문자열 위치 찾기	INSTR('abcde', 'cd') → 3
LEFT()	왼쪽에서 n글자 추출	LEFT('abcdef', 3) → 'abc'
RIGHT()	오른쪽에서 n글자 추출	RIGHT('abcdef', 2) → 'ef'

#통계함수
통계함수의 결과는 1개이다.
전체합산, 평균, 갯수확인count, 랭킹, 최대, 최소, 표준편차, 중앙값, 최빈값, 분산
상관계수, 공분산, 회귀분석

COUNT()	행의 개수 계산	COUNT(*), COUNT(column_name)
SUM()	숫자 값의 합 계산	SUM(salary)
AVG()	평균값 계산	AVG(score)
MIN()	최솟값 반환	MIN(age)
MAX()	최댓값 반환	MAX(price)
VAR_SAMP() / VARIANCE()	표본 분산	VAR_SAMP(score)
VAR_POP()	모집단 분산	VAR_POP(score)
STDDEV_SAMP()	표본 표준편차	STDDEV_SAMP(score)
STDDEV_POP()	모집단 표준편차	STDDEV_POP(score)

#~별(부서별, 연령별) group by : 조건처리 having
확인사항 : group by 중복을 제거, group by를 사용하지 않고 중복제거 명령 distinict
select avg(sal) from emp;
select avg(sal) from emp where job='SALESMAN';
select job,avg(sal) from emp where job='SALESMAN'; --오류발생
select avg(sal) from emp group by job;
select job,avg(sal) from emp group by job;
select job,avg(sal) from emp group by job having job='SALESMAN';

#검색시 확인사항
정확한 검색
유사한 검색






















